# Copyright VMware, Inc.
# SPDX-License-Identifier: APACHE-2.0

command:
  check-app-version:
    exec: python -c 'import mxnet; print(mxnet.__version__)'
    exit-status: 0
    stdout:
      - {{ .Env.APP_VERSION }}
  # From: https://mxnet.apache.org/versions/1.8.0/api/python/docs/tutorials/packages/ndarray/02-ndarray-operations.html
  check-mxnet-operation:
    exec: python -c 'import mxnet as mx; a = mx.nd.ones((2, 3)); b = a * 2 + 1; b.asnumpy()'
    exit-status: 0
  check-mxnet-features:
  # Transform enabled features in a python command of the type "is_enabled(A) and is_enabled(B)"
  {{ $check_enabled := "" }}
  {{ range $i, $e := .Vars.features.enabled }}
    {{ if $i }}
      {{ $check_enabled = (printf "%s and" $check_enabled)}}
    {{ end }}
   {{ $check_enabled = (printf "%s (fs.is_enabled(%s))" $check_enabled ($e | quote))}}
  {{ end }}
  # Transform disabled features in a python command of the type "(not is_enabled(A)) and (not is_enabled(B))"
  {{ $check_disabled := "" }}
  {{ range $i, $e := .Vars.features.disabled }}
    {{ if $i }}
      {{ $check_disabled = (printf "%s and" $check_disabled)}}
    {{ end }}
   {{ $check_disabled = (printf "%s (not fs.is_enabled(%s))" $check_disabled ($e | quote))}}
  {{ end }}
    exec: python -c 'import mxnet as mx; import mxnet.runtime; fs = mx.runtime.Features(); res=({{$check_enabled}} and {{$check_disabled}}); print(res)'
    exit-status: 0
    stdout:
      - 'True'