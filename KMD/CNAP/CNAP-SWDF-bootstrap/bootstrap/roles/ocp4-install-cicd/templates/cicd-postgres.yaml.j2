---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sonarqube-postgres-sa
  namespace: {{ namespace }}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonarqube-postgres-data
  namespace: "{{ namespace }}"
  labels:
    app: sonarqube
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube-postgresql
  namespace: "{{ namespace }}"
  labels:
    app: sonarqube
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: sonarqube
    app.kubernetes.io/name: sonarqube-postgresql
    app.kubernetes.io/part-of: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      name: sonarqube-postgresql
  template:
    metadata:
      labels:
        app: sonarqube
        name: sonarqube-postgresql
    spec:
      containers:
      - name: postgresql
        imagePullPolicy: Always
        image: registry.redhat.io/rhel8/postgresql-13:1-91
        env:
        - name: POSTGRESQL_USER
          value: sonarqube
        - name: POSTGRESQL_PASSWORD
          value: mypassword
        - name: POSTGRESQL_DATABASE
          value: sonarqube
        - name: POSTGRESQL_MAX_CONNECTIONS
          value: "100"
        - name: POSTGRESQL_SHARED_BUFFERS
          value: 12MB
        - name: POSTGRESQL_ADMIN_PASSWORD
          value: kmd-admin-123
        ports:
        - containerPort: 5432
        livenessProbe:
          initialDelaySeconds: 31
          tcpSocket:
            port: 5432
          timeoutSeconds: 1
          failureThreshold: 10
          periodSeconds: 20
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - psql -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c 'SELECT 1'
        resources:
          limits:
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: sonarqube-postgres-data
      serviceAccountName: sonarqube-postgres-sa
      volumes:
      - name: sonarqube-postgres-data
        persistentVolumeClaim:
          claimName: sonarqube-postgres-data
---
kind: Service
apiVersion: v1
metadata:
  name: sonarqube-postgresql
  namespace: "{{ namespace }}"
  labels:
    app: sonarqube-postgres
spec:
  ports:
  - name: postgresql
    port: 5432
    targetPort: 5432
  selector:
    name: sonarqube-postgresql
